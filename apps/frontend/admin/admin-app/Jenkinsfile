pipeline {
    agent any

    environment {
        appUrl = 'http://46.28.44.125:8082/api/health'
        httpStatus = ''
        httpResponse = ''
    }
    stages {
        stage('Clone Repo') {
            steps {
                git branch: 'main', url: 'https://github.com/pappubhaskarus/cuddly-carnival.git'
            }
        }

        stage('Install') {
            steps {
                sh 'npm ci'
            }
        }

        stage('Lint') {
            steps {
                sh 'npm run lint'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Docker Stop & Remove') {
            steps {
                    sh 'docker stop hb-frontend || true'
                    sh 'docker rm hb-frontend || true'
            }
        }

        stage('Docker Build') {
            steps {
                    sh 'docker build -t hb-frontend:latest .'
            }
        }

        stage('Docker Run') {
            steps {
                    sh 'docker run --name hb-frontend -d -p 8082:3000 hb-frontend'
            }
        }

        stage('Check Service Health') {
            steps {
                sleep time: 5000, unit: 'MILLISECONDS'
                script {
                    httpStatus = sh(script: "curl --insecure -w '%{http_code}' $appUrl -o /dev/null", returnStdout: true)

                    if (httpStatus != '200') {
                        echo "Service error with status code = ${httpStatus} when calling ${appUrl}"
                        error('notify error')
                    } else {
                        echo "Service OK with status: ${httpStatus}"
                    }
                }
            }
        }
    }

    post {
        always {
            // Clean up workspace

            cleanWs()
        }

        success {
            // Notify on success

            echo 'Build successful!'
        }

        unstable {
            // Notify on unstable build

            echo 'Build unstable.'
        }

        failure {
            // Notify on failure

            echo 'Build failed!'
        }
    }
}
